apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-v1
  namespace: gcp-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store
      version: v1
  template:
    metadata:
      labels:
        app: store
        version: v1
    spec:
      containers:
      - name: whereami
        image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.20
        ports:
        - containerPort: 8080
        env:
        - name: METADATA
          value: "store-v1"
---
apiVersion: v1
kind: Service
metadata:
  name: store-v1
  namespace: gcp-test
spec:
  type: ClusterIP
  selector:
    app: store
    version: v1
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-v2
  namespace: gcp-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store
      version: v2
  template:
    metadata:
      labels:
        app: store
        version: v2
    spec:
      containers:
      - name: whereami
        image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.20
        ports:
        - containerPort: 8080
        env:
        - name: METADATA
          value: "store-v2"
---
apiVersion: v1
kind: Service
metadata:
  name: store-v2
  namespace: gcp-test
spec:
  type: ClusterIP
  selector:
    app: store
    version: v2
  ports:
  - port: 8080
    targetPort: 8080
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: store-v1
  namespace: gcp-test
spec:
  parentRefs:
  - name: gcp-test-internal
  hostnames:
  - "store1.example.com"
  rules:
  - matches:
    - path:
        value: /
    backendRefs:
    - name: "store-v1"
      port: 8080
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: store-v2
  namespace: gcp-test
spec:
  parentRefs:
  - name: gcp-test-internal
  hostnames:
  - "store2.example.com"
  rules:
  - matches:
    - path:
        value: /
    backendRefs:
    - name: "store-v2"
      port: 8080
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: store-v1
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        requestPath: "/"
  targetRef:
    group: ""
    kind: Service
    name: store-v1
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: store-v2
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        requestPath: "/"
  targetRef:
    group: ""
    kind: Service
    name: store-v2